HTTP是无状态协议，因此需要状态管理。记录用户浏览状态和请求。
	状态管理分两种，Cookie（数据保存在客户端）和Session（数据保存在服务端）

1.Cookie
    1）创建Cookie：
	Cookie c=new Cookie(String name,String value);
	response.addCookie(c);
	//name:用于区分不同Cookie的名字 value:Cookie的值。
    2）获取Cookie对象:
	Cookie[ ] request.getCookies();
         获取特定的一个Cookie对象的名或值：
	String Cookie.getName();
	String Cookie.getValue();
    3）修改Cookie：c.setValue("dsfwdv");
    4）设置Cookie的生存时间：void Cookie.setMaxAge(int seconds);//seconds是秒，精确度不高。
    5）设置Cookie的编码方式：Cookie c=new Cookie("city",URLEncoder.encode("北京","utf-8"));
    6）设置Cookie的解码方式：value1=URLDecoder.decode(value,"utf-8");//value1是转化完的value值。
    7）设置Cookie的保存路径：（默认是与绑定的网页是同一个目录）自定义设置如下：
			Cookie c=new Cookie("uname","jack");
			c.setPath("/appName");
			reponse.addCookie(c);


2.Session
    1）创建Session：HttpSession s=request.getSession(boolean flag);
    2）绑定数据：    void Session.setAttribute(String name,Object obj);//绑定数据；
		Object Session.getAttribute(String name);//获取数据；
		void  Session.removeAttributte(String name)//移除数据；
    3）移除Session：Session.invalidate()；
    4 )设置Session的生存时间：
	1.<session-config>
		<session-timeout>30</session-timeout>
	 </session-config>
	2.或  void session.setMaxInactiveInterval(int seconds);//不设置 默认为30分钟。




3.URL重写
	Session使用时需要配合Cookie 如果Cookie被禁用了，需要URL重写
	
	1.如果是地址链接和表单提交，使用
		response.encodeRedirectURL(String url);//生成重写后的ＵＲＬ
	2.如果是重定向，使用
		response.encodeRedirectURL(String url);／／生成重写后的ＵＲＬ
	